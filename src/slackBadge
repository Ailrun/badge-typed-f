#!/usr/bin/env node

const process = require('process');

const fetch = require('node-fetch');
const queryString = require('query-string');

module.exports = async function (req, res) {
  const members = await getMembers();
  const users = members.filter(isUser);

  const total = users.length;
  const active = (await getPresences(users)).filter(isActive).length;

  const query = queryString.stringify(req.query);
  const badge = await getBadge({ active, total, query });

  res.set('Content-Type', 'image/svg+xml');
  res.send(badge);
};

async function getMembers() {
  const token = process.env.SLACK_WORKSPACE_TOKEN;
  const response = await fetch('https://typed-f.slack.com/api/users.list', {
    headers: {
      Authorization: 'Bearer ' + token,
    },
  });
  const body = await response.json();
  return body.members;
}

async function getPresences(users) {
  const token = process.env.SLACK_WORKSPACE_TOKEN;
  const responses = await Promise.all(users.map(({ id }) => {
    return fetch(`https://typed-f.slack.com/api/users.getPresence?user=${id}`, {
      headers: {
        Authorization: 'Bearer ' + token,
      },
    });
  }));
  const bodys = await Promise.all(responses.map((response) => response.json()));

  return bodys.map((body) => body.presence);
}

async function getBadge({ active, total, query }) {
  const response = await fetch(`https://img.shields.io/badge/slack-${active}%2F${total}-hotpink.svg?${query}`);
  return response.text();
}

function isUser(member) {
  return member.id !== 'USLACKBOT' &&
    !member.is_bot &&
    !member.deleted;
}

function isActive(presence) {
  return presence === 'active';
}
