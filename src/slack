#!/usr/bin/env node

const path = require('path');
const process = require('process');

const express = require('express');
const request = require('superagent');
const queryString = require('query-string');

const slackUrl = 'https://typed-f.slack.com/';
const makeSlackAPIUrl = function () {
  return slackUrl + 'api/' + [].join.call(arguments, '/');
};

const router = module.exports = express.Router();

router.get('/badge.svg', async function (req, res) {
  const members = await getMembers();
  const users = members.filter(isUser);

  const total = users.length;
  const active = (await getPresences(users)).filter(isActive).length;

  const query = queryString.stringify(req.query);
  const badge = await getBadge({ active, total, query });

  res.set('Content-Type', 'image/svg+xml');
  res.send(badge);
});

router.get('/welcome', async function (req, res) {
  const members = await getMembers();
  const users = members.filter(isUser);

  const total = users.length;
  const active = (await getPresences(users)).filter(isActive).length;

  res.render(path.join(__dirname, './templates/slack/welcome.pug'), {
    active,
    total,
    recaptchaKey: process.env.GOOGLE_RECAPTCHA_SITEKEY,
  });
});

router.use(express.static(path.join(__dirname, './public/slack/')));

async function getMembers() {
  const response = await request(makeSlackAPIUrl('users.list'))
    .set('Authorization', 'Bearer ' + process.env.SLACK_WORKSPACE_TOKEN);

  return response.body.members;
}

async function getPresences(users) {
  const responses = await Promise.all(users.map(({ id }) => {
    return request(makeSlackAPIUrl('users.getPresence'))
      .query({ user: id })
      .set('Authorization', 'Bearer ' + process.env.SLACK_WORKSPACE_TOKEN);
  }));

  return responses.map((response) => response.body.presence);
}

async function getBadge({ active, total, query }) {
  const response = await request(`https://img.shields.io/badge/slack-${active}%2F${total}-hotpink.svg?${query}`);

  return response.body;
}

function isUser(member) {
  return member.id !== 'USLACKBOT' &&
    !member.is_bot &&
    !member.deleted;
}

function isActive(presence) {
  return presence === 'active';
}
